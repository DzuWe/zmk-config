/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define CDE 3
#define ADJ 4

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

&caps_word {
};

&sl { release-after-ms = <2000>; };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "MAIN";
            bindings = <
&kp LEFT_WIN  &kp TAB                 &kp Q  &kp W  &kp E         &kp R                 &kp T          &kp Y         &kp U        &kp I            &kp O    &kp P     &kp LBKT       &mt RWIN RBKT
              &kp LEFT_ALT            &kp A  &kp S  &kp D         &kp F                 &kp G          &kp H         &kp J        &kp K            &kp L    &kp SEMI  &mt RCTRL SQT
              &mt LEFT_CONTROL MINUS  &kp Z  &kp X  &kp C         &kp V                 &kp B          &kp N         &kp M        &kp COMMA        &kp DOT  &kp FSLH  &mt RALT BSLH
                                                    &lt 3 ESCAPE  &mt LEFT_SHIFT SPACE  &lt 1 RET      &lt 1 ESCAPE  &lt 2 SPACE  &lt 3 BACKSPACE
            >;
        };

        lower_layer {
            label = "SYM";
            bindings = <
&trans  &kp UNDER  &kp N1    &kp N2  &kp N3     &kp N4    &kp N5         &kp N6     &kp N7    &kp N8     &kp N9    &kp N0    &trans           &mt RGUI F12
        &trans     &kp EXCL  &kp AT  &kp HASH   &kp DLLR  &kp PRCNT      &kp CARET  &kp AMPS  &kp STAR   &kp LPAR  &kp RPAR  &mt RCTRL MINUS
        &kp F1     &kp F2    &kp F3  &kp F4     &kp F5    &kp F6         &kp F7     &kp F8    &kp F9     &kp F10   &kp F11   &kp F12
                                     &lt 4 TAB  &trans    &trans         &trans     &trans    &lt 4 DEL
            >;
        };

        raise_layer {
            label = "NUM";
            bindings = <
&trans  &trans  &trans  &kp N1  &kp N2  &kp N3  &trans         &kp C_VOL_UP  &kp HOME        &kp PSCRN   &kp PG_UP  &kp DELETE       &kp CAPS         &trans
        &trans  &trans  &kp N4  &kp N5  &kp N6  &trans         &kp LEFT      &kp DOWN_ARROW  &kp UP      &kp RIGHT  &kp INS          &mt RCTRL K_APP
        &trans  &trans  &kp N7  &kp N8  &kp N9  &kp N0         &kp C_VOL_DN  &kp END         &kp K_MUTE  &kp PG_DN  &kp PAUSE_BREAK  &trans
                                &trans  &trans  &lt 4 RET      &lt 4 ESC     &trans          &trans
            >;
        };

        code_layer {
            bindings = <
&trans  &trans      &kp ASTERISK  &kp PLUS        &kp DOLLAR  &kp LEFT_BRACE        &kp LESS_THAN      &kp GREATER_THAN      &kp RIGHT_BRACE        &kp EXCLAMATION  &kp AMPERSAND  &kp PIPE       &caps_word  &kp BACKSPACE
        &lt 5 LALT  &kp LCTRL     &kp MINUS       &kp GRAVE   &kp LEFT_PARENTHESIS  &kp SQT            &kp DOUBLE_QUOTES     &kp RIGHT_PARENTHESIS  &kp EQUAL        &kp MINUS      &kp SEMICOLON  &lt 5 SQT
        &trans      &kp HASH      &kp UNDERSCORE  &kp TILDE   &kp LEFT_BRACKET      &kp SLASH          &kp NON_US_BACKSLASH  &kp RIGHT_BRACKET      &kp COMMA        &kp DOT        &kp QUESTION   &trans
                                                  &trans      &trans                &trans             &trans                &trans                 &trans
            >;

            label = "CODE";
        };

        adjust_layer {
            label = "ADJ";
            bindings = <
&sys_reset  &bootloader   &none         &none              &none         &none         &none             &none         &none         &none         &none              &none         &bootloader   &sys_reset
            &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1       &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1       &bt BT_SEL 0  &bt BT_CLR
            &out OUT_TOG  &trans        &ext_power EP_TOG  &none         &none         &none             &none         &none         &none         &ext_power EP_TOG  &tog 0        &out OUT_TOG
                                                           &trans        &none         &trans            &trans        &none         &trans
            >;
        };

        tilling_layer {
            bindings = <
&none  &none      &mt LC(NUMBER_1) LS(LA(LC(NUMBER_1)))  &mt LC(NUMBER_2) LA(LS(LC(NUMBER_2)))  &mt LC(NUMBER_3) LS(LA(LC(NUMBER_3)))  &mt LC(NUMBER_4) LS(LA(LC(NUMBER_4)))  &kp LS(LA(LC(RIGHT)))      &kp LS(LA(LC(LEFT)))    &none              &none          &kp LS(LA(P))            &none  &none  &none
       &none      &kp LA(LS(A))                          &kp LS(LA(S))                          &kp LA(LS(D))                          &kp LS(LA(F))                          &kp LS(LA(G))              &mt LC(LEFT) LS(LA(H))  &kp LS(LA(J))      &kp LA(LS(K))  &mt LC(RIGHT) LS(LA(L))  &none  &none
       &kp LCTRL  &kp LS(LA(Z))                          &none                                  &none                                  &none                                  &kt LS(LA(T))              &kp LS(LA(N))           &kp LS(LA(M))      &none          &none                    &none  &none
                                                                                                &none                                  &kp LS(LA(SPACE))                      &kp LS(LA(RET))            &kp LS(LA(RET))         &kp LS(LA(SPACE))  &none
            >;

            label = "Tilling";
        };
    };
};
